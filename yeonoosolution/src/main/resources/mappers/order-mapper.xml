<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="orders">
	<select id="selectPmOrdersBySearch" resultType="PmOrdersDto" parameterType="PmSearch">
		SELECT	od.*, com.company_name AS customerName
		FROM	orders od INNER JOIN company com ON od.customer_code = com.company_code
		WHERE 	od.receive_or_place = '발주'
		AND		delete_status = 'N'
		AND		order_status IN ('저장', '확정')
		<if test="startDate != '' and startDate != null">
			AND (od.order_date >= #{startDate} OR od.due_date >= #{startDate} 
				 OR od.reg_date >= #{startDate} OR od.update_date >= #{startDate})
		</if>
		<if test="endDate != '' and endDate != null">
		<![CDATA[
			AND (od.order_date <= #{endDate} OR od.due_date <= #{endDate} 
				 OR od.reg_date <= #{endDate} OR od.update_date <= #{endDate})
		]]>
		</if>
		AND (#{orderDate} IS NULL OR od.order_date = #{orderDate})
		AND (#{customerCode} IS NULL OR od.customer_code = #{customerCode})
		AND (#{orderEmpid} IS NULL OR od.order_empid = #{orderEmpid})
		
	</select>
	<select id="selectPmOrdersDetailByOrderCode" resultType="PmOrdersDetailDto" parameterType="String">
		SELECT 	 oddt.*, it.item_name AS item_name
		FROM	 orders_detail oddt INNER JOIN item it ON oddt.item_code = it.item_code
		WHERE	 oddt.order_detail_code = #{orderCode}
		ORDER BY oddt.sorder
	</select>
	<update id="updatePmOrdersByOrderCode" parameterType="PmOrdersDto">
		UPDATE	orders
		SET		update_user = #{updateUser},
	<choose>
	<when test="column == 'deleteStatus'">
		delete_status = #{data}
	</when>
	<when test="column == 'orderStatus'">
		order_status = #{data}
	</when>
	</choose>
		WHERE	order_code = #{orderCode}
	</update>
	<select id="selectPmCompanyBySearch" parameterType="String" resultType="PmCompanyDto">
		SELECT 	*
		FROM	company
		<if test="search != 'null'">
		WHERE	company_code LIKE '%' || #{search} || '%'
		OR		company_name LIKE '%' || #{search} || '%'
		</if>
	</select>
	<select id="selectPmItemBySearch" parameterType="String" resultType="PmItemDto">
		SELECT 	*
		FROM	item
		WHERE	use_yn = 'Y'
		<if test="search != 'null'">
		AND		(item_code LIKE '%' || #{search} || '%'
		OR		item_name LIKE '%' || #{search} || '%')
		</if>
	</select>
	<select id="insertPmOrder" statementType="CALLABLE">
		{ CALL 
			ORDER_INSERT(
				#{companyCode,		mode=IN, jdbcType=VARCHAR}, 
				#{customerCode,		mode=IN, jdbcType=VARCHAR}, 
				#{receiveOrderType,			mode=IN, jdbcType=VARCHAR}, 
				#{orderDate, 	mode=IN, jdbcType=DATE}, 
				#{orderEmpid,			mode=IN, jdbcType=VARCHAR}, 
				#{deliveryPlan,			mode=IN, jdbcType=VARCHAR}, 
				#{dueDate,	mode=IN, jdbcType=DATE}, 
				#{memo,	mode=IN, jdbcType=VARCHAR}, 
				#{regUser,		mode=IN, jdbcType=VARCHAR},
				#{updateUser,		mode=IN, jdbcType=VARCHAR},
				#{orderCode,		mode=OUT, jdbcType=VARCHAR}
			) 
		}
	</select>
	<insert id="insertPmOrdersDetail" parameterType="PmOrdersDetailDto">
		INSERT INTO orders_detail
		VALUES(#{orderDetailCode}, #{sorder}, #{itemCode}, #{quantity}, #{price}, #{amount}, #{memo}, #{itemStockUnit}, 'Y')
	</insert>
	<update id="updatePmOrder" parameterType="PmOrdersDto">
	    UPDATE  orders
    	SET     customer_code = #{customerCode}, receive_order_type = #{receiveOrderType},
            	order_date = #{orderDate}, order_empid = #{orderEmpid},
            	delivery_plan = #{deliveryPlan}, due_date = #{dueDate}, memo = #{memo},
            	update_date = SYSDATE, update_user = #{updateUser}
    	WHERE   order_code = #{orderCode}
	</update>
	<delete id="deletePmOrderDetailByOrderCode" parameterType="String">
		DELETE 
		FROM	orders_detail
		WHERE	order_detail_code = #{orderCode}
	</delete>
	
	<!-- 입고 --><!--  --><!--  --><!--  --><!--  --><!--  --><!--  --><!--  -->
	
	<select id="selectPmStockInListBySearch" parameterType="PmSearch" resultType="PmStockInDto">
		SELECT	st_in.*, com.company_name AS customerName
		FROM	st_in INNER JOIN company com ON st_in.customer_code = com.company_code
		WHERE	delete_status = 'N'
		AND 	(#{orderDate} IS NULL OR st_in.in_date = TO_DATE(#{orderDate}, 'YYYY/MM/DD'))
		AND 	(#{customerCode} IS NULL OR st_in.customer_code = #{customerCode})
	</select>
	<select id="selectPmStockInDetailByInCode" parameterType="String" resultType="PmStInDetailDto">
		SELECT 	 sidt.*, it.item_name AS item_name, it.STOCK_UNIT AS  stockUnit, wh.wh_name AS whName
		FROM	 st_in_detail sidt INNER JOIN item it ON sidt.item_code = it.item_code
							  LEFT OUTER JOIN wh ON sidt.wh_code = wh.wh_code
		WHERE	 sidt.in_code = #{inCode}
		ORDER BY sidt.sorder
	</select>
	<update id="updatePmStockInByInCode" parameterType="PmStockInDto">
		UPDATE	st_in
		SET		update_user = #{updateUser},
	<choose>
	<when test="column == 'deleteStatus'">
		delete_status = #{data}
	</when>
	<when test="column == 'orderStatus'">
		in_type = #{data}
	</when>
	</choose>
		WHERE	in_code = #{inCode}
	</update>
	<select id="selectPmWh" resultType="PmWhDto">
		SELECT	*
		FROM	wh
		WHERE	use_yn = 'Y'
	</select>
	<select id="updatePmWhStockDetailByStInDetail" statementType="CALLABLE">
		{ CALL 
			WH_STOCK_DETAIL_UPDATE(
				#{whCode,		mode=IN, jdbcType=VARCHAR}, 
				#{itemCode,		mode=IN, jdbcType=VARCHAR}, 
				#{inQuantity,	mode=IN, jdbcType=INTEGER}, 
				#{updateUser, 	mode=IN, jdbcType=VARCHAR}
			) 
		}
	</select>
	<update id="updatePmWhStockDetailBystInDetailmius" parameterType="PmStInDetailDto">
		UPDATE 	wh_stock_detail
		SET		good_quantity = good_quantity - #{inQuantity}
		WHERE	wh_code = #{whCode}
        AND 	item_code = #{itemCode}
	</update>
	<select id="insertPmStIn" statementType="CALLABLE">
		{ CALL 
			ST_IN_INSERT(
				#{orderCode,	mode=IN, jdbcType=VARCHAR}, 
				#{companyCode,	mode=IN, jdbcType=VARCHAR}, 
				#{customerCode,	mode=IN, jdbcType=VARCHAR}, 
				#{inDate, 		mode=IN, jdbcType=DATE}, 
				#{regUser,		mode=IN, jdbcType=VARCHAR},
				#{updateUser,	mode=IN, jdbcType=VARCHAR},
				#{memo,			mode=IN, jdbcType=VARCHAR}, 
				#{inCode,		mode=OUT, jdbcType=VARCHAR}
			) 
		}
	</select>
	<select id="insertPmStInDetail" parameterType="PmStInDetailDto">
		INSERT INTO st_in_detail
			VALUES(#{inCode}, #{sorder}, #{whCode}, #{itemCode}, #{inQuantity}, #{inPrice}, #{memo})
	</select>
	<update id="updatePmStIn" parameterType="PmStockInDto">
	    UPDATE  st_in
    	SET     order_code = #{orderCode}, customer_code = #{customerCode}, in_date = #{inDate},
            	update_date = SYSDATE, update_user = #{updateUser}
            	<if test="memo != null and memo != ''">
            	, memo = #{memo}
            	</if>
    	WHERE   in_code = #{inCode}
	</update>
	<delete id="deletePmStInDetailByOrderCode" parameterType="String">
		DELETE 
		FROM	st_in_detail
		WHERE	in_code = #{inCode}
	</delete>
	<insert id="ipInsert" parameterType="IpDto">
		INSERT INTO login_log VALUES(#{loginDate}, #{loginIp, jdbcType=VARCHAR}, #{memo, jdbcType=VARCHAR})
	</insert>
</mapper>